name: Webcompanion CI/CD Pipeline

env:
    BRANCH_NAME: $(echo ${{ github.ref }} | sed 's/refs\/heads\///g')


on:
    push:
        branches:
            - main
            - qa
            - dev
    pull_request:
        branches:
            - main
            - qa
            - dev

jobs:
    check-branch:
        runs-on: ubuntu-latest
        steps:
            - name: Check if branch is valid
              run: |
                if [ $BRANCH_NAME != "main" ] && [ $BRANCH_NAME != "qa" ] && [ $BRANCH_NAME != "dev" ]; then
                    echo "Invalid branch name. Exiting..."
                    exit 1
                fi
    test-on-branches:
        name: Test on branches
        runs-on: ubuntu-latest
        needs: check-branch
        if: ${{ startsWith(github.ref, 'refs/heads/dev') }} || ${{ startsWith(github.ref, 'refs/heads/qa') }} || ${{ startsWith(github.ref, 'refs/heads/main') }} && github.event_name == 'push'
        steps:
            - name: Checkout code
              uses: actions/checkout@v2
            
            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                python-version: '3.11'

            - name: Install dependencies
              run: |
                python -m venv venv
                source venv/bin/activate
                pip install -r requirements.txt --no-cache-dir
                pip install pytest pytest-flask
            
            - name: Run tests
              run: |
                source venv/bin/activate
                pytest

    sonarcloud-scan:
        name: SonarCloud Scan
        runs-on: ubuntu-latest
        needs: test-on-branches
        if: ${{ startsWith(github.ref, 'refs/heads/dev') }} || ${{ startsWith(github.ref, 'refs/heads/qa') }} || ${{ startsWith(github.ref, 'refs/heads/main') }} && github.event_name == 'pull_request'
        steps:
            - name: Checkout code
              uses: actions/checkout@v2
              with:
                fetch-depth: 0

            - name: Set up SonarCloud
              uses: sonarsource/sonarqube-scan-action@master
              env:
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
            
            # - name: SonarQube Quality Gate
            #   uses: sonarsource/sonarqube-quality-gate-action@master
            #   env:
            #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
    build-deploy-dev:
        name: Build and Deploy to Dev
        runs-on: ubuntu-latest
        needs: sonarcloud-scan

        env:
            IMAGE_TAG: "dev-${{ github.run_id }}"

        if: ${{ startsWith(github.ref, 'refs/heads/dev') && github.event_name == 'pull_request' }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v2
            
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            
            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}
            
            - name: Build Docker image
              uses: docker/build-push-action@v2
              id: build
              with:
                context: .
                push: false
                tags: ${{ secrets.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            
            - name: Install Trivy
              run: |
                curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
            
            - name: Scan Docker image
              run: |
                trivy image ${{ secrets.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

            - name: Push Docker image
              if: success()
              uses: docker/build-push-action@v2
              with:
                context: .
                push: true
                tags: ${{ secrets.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
    
    build-deploy-qa:
        name: Build and Deploy to QA
        runs-on: ubuntu-latest
        needs: sonarcloud-scan
        env:
            IMAGE_TAG: "qa-${{ github.run_id }}"
        if: ${{ startsWith(github.ref, 'refs/heads/qa') && github.event_name == 'pull_request' }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v2
            
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            
            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}
            
            - name: Build Docker image
              uses: docker/build-push-action@v2
              id: build
              with:
                context: .
                push: false
                tags: ${{ secrets.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            
            - name: Install Trivy
              run: |
                curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
            
            - name: Scan Docker image
              run: |
                trivy image ${{ secrets.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

            - name: Push Docker image
              if: success()
              uses: docker/build-push-action@v2
              with:
                context: .
                push: true
                tags: ${{ secrets.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

    build-deploy-prod:
        name: Build and Deploy to Prod
        runs-on: ubuntu-latest
        needs: sonarcloud-scan
        env:
            IMAGE_TAG: "prod-${{ github.run_id }}"
        if: ${{ startsWith(github.ref, 'refs/heads/main') && github.event_name == 'pull_request' }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            
            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}
            
            - name: Build Docker image
              uses: docker/build-push-action@v2
              id: build
              with:
                context: .
                push: false
                tags: ${{ secrets.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            
            - name: Install Trivy
              run: |
                curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
            
            - name: Scan Docker image
              run: |
                trivy image ${{ secrets.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

            - name: Push Docker image
              if: success()
              uses: docker/build-push-action@v2
              with:
                context: .
                push: true
                tags: ${{ secrets.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        